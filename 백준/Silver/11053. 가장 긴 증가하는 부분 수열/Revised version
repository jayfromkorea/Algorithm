#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;

int n, array[100], dp[100];

int lis(int start){
	if (dp[start] != -1) return dp[start];
	dp[start] = 1; // Every element is an LIS of at least 1 (itself)
	for (int i = start + 1; i < n; ++i){
		if (array[start] < array[i]){
			dp[start] = max(dp[start], lis(i) + 1);
		}
	}
	return dp[start];
}

int main() {
	cin >> n;
	for (int i = 0; i < n; ++i){
		cin >> array[i];
	}
	memset(dp, -1, sizeof(dp));
	int result = 0;
	for (int i = 0; i < n; ++i){
		result = max(result, lis(i));
	}
	cout << result << "\n";
	return 0;
}
