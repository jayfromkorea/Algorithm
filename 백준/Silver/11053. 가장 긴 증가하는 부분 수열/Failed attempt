#include <iostream>
#include <algorithm>
using namespace std;

int n, array[100], dp[100];

int lis(int start){
	if (start == n-1) return 1; // base cae, the last index
	for (int i = start + 1; i < n-1; ++i){
		if (array[start] < array[i]){
			dp[start] = max(dp[start], lis(i+1) + 1); // choose the biggest btw the esixting value and the new
		}
		//dp[start] = max(dp[start], dp[start - 1]);
	}
	return dp[start];
}

int main() {
	cin >> n;
	for (int i = 0; i < n; ++i){
		cin >> array[i];
	}
	dp[0] = 1;
	int res = 0;
	for (int i = 1; i < n; ++i){
		lis(i);
		res = max(res, lis(i));
	}
	cout << dp[n-1] << "\n";
}
